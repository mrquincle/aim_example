/**
 * IDL description of the ExampleModule
 *
 * This file is automatically parsed by the rurbuilder backends for the omniidl 
 * compiler. The names of the functions will become port identifiers. The names 
 * of the function variables are not used. For now, if the function variable 
 * ends with a number, like "void Sensor(in long input2);" there will be two
 * portnames created.
 *
 * Author: 
 * Copyright: 
 * Date: 
 * License: 
 */

// Recommended namespace "rur"
module rur {

// The command-line parameters
struct Param {
  // multiple modules can be addressed in parallel, killed, etc. using "module_id"
  string module_id;
  // a certain parameter over the command-line (long becomes int) 
  string filename;
};

// Typedef for array of integers
typedef sequence<long> long_seq;

// We want to be able to give our class a name
interface ExampleModule {

  // Input from sensor in the form of array
  void Sensor(in long_seq input);

  // Length of default sensor input (needed by some middlewares)
  void SensorArrayLength(in long sensor_l);

  // Output is one value each time
  void Result(out long output);

};

};
